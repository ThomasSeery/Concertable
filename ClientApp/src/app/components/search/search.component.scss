// styles.scss

/* Main container is marked as a container query target */
.container {
    position: relative;            // Needed for absolute positioning inside
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    padding: 20px 60px;
    max-width: 1000px;
    margin: 20px auto;
    background: white;
    border-radius: 50px;           // Rounded edges
    border: 1px solid #ddd;
    container-type: inline-size;
    min-height: 60px;              // Minimum height for proper vertical centering
  }
  
  /* Wrapper for inner fields */
  .wrapper {
    display: flex;
    align-items: center;
    justify-content: space-between;
    width: 100%;
  }
  
  /* Ensure inner components are flex children */
  :host ::ng-deep .location-search mat-form-field, 
  .search-input,
  :host ::ng-deep .date-picker mat-form-field {
    display: flex;
    align-items: center;
    justify-content: center;
  }
  
  /* Sizing for inner components */
  .location-search {
    flex: 1;
  }
  
  .search-input {
    flex: 3;
  }
  
  .date-picker {
    flex: 1;
  }
  
  /* The search button is absolutely positioned so it remains at the right edge,
     vertically centered within the container */
  .btn-search {
    position: absolute;
    top: 50%;
    right: 20px;                  // Adjust this value for desired right spacing
    transform: translateY(-50%);  // Vertically center the button
  }

  .btn-user-location {
    position: absolute;
    top: 50%;
    left: 20px;                 
    transform: translateY(-50%);
  }
  
  /* Container query: When container's inline size is 800px or smaller...
     re-stack the inner fields vertically. The absolute button remains at its RHS spot */
  @container (width < 800px) {
    .wrapper {
      flex-direction: column;
      align-items: stretch;       // Stretch inner elements to container's width
      gap: 10px;                  // Optional spacing between fields
    }
  }

  :host ::ng-deep .mat-mdc-form-field-subscript-wrapper {
    display: none !important;
  }
  